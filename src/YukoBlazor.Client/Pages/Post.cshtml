@page "/post/{id}"
@using Pomelo.Marked
@inject IJSRuntime JsRuntime
@inject ApiClient API
@inject IdentityContainer ID

<div id="main-wrapper">
    <div class="main section" id="main">
        <div class="widget Blog" data-version="1" id="Blog1">
            <div class="blog-posts hfeed">
                @if (post != null)
                {
                    <PostMainBody PostModel="@post" />
                }
            </div>

            <div class="comments" id="comments">
                <a name="comments"></a>
                <h4> @count comments: </h4>
                <div class="comments-content">
                    <div id="comment-holder">
                        <div class="comment-thread toplevel-thread">
                            @if (comments != null)
                            {
                                <ol id="top-ra">
                                    @foreach (var x in comments)
                                    {
                                    <li class="comment">
                                        <div class="avatar-image-container">
                                            <img src="@x.AvatarUrl" alt="" />
                                        </div>
                                        <div class="comment-block">
                                            <div class="comment-header">
                                                <cite class="user">@x.Name</cite>
                                                <span class="icon user"></span>
                                                <span class="datetime secondary-text">@x.Time.ToString("MMM dd yyyy HH:mm")</span>
                                            </div>
                                            <div>
                                                @((MarkupString)x.Content)
                                            </div>
                                            <span class="comment-actions secondary-text">
                                                <a class="comment-reply" target="_self" href="javascript:;">Reply</a>
                                                @if (ID.IsAuthenticated)
                                                {
                                                    <span class="item-control">
                                                        <a target="_self">Delete</a>
                                                    </span>
                                                }
                                            </span>
                                        </div>
                                        @if (x.InnerComments != null && x.InnerComments.Count() > 0)
                                        {
                                            <div class="comment-replies">
                                                <div class="comment-thread inline-thread">
                                                    <span class="thread-toggle thread-expanded"><span class="thread-arrow"></span><span class="thread-count">Replies</span></span>
                                                    <ol class="thread-chrome thread-expanded">
                                                        <div>
                                                            @foreach (var y in x.InnerComments)
                                                            {
                                                                <li class="comment">
                                                                    <div class="avatar-image-container">
                                                                        <img src="@y.AvatarUrl" alt="" />
                                                                    </div>
                                                                    <div class="comment-block">
                                                                        <div class="comment-header">
                                                                            <cite class="user">@y.Name</cite>
                                                                            <span class="icon user "></span>
                                                                            <span class="datetime secondary-text">@y.Time.ToString("MMM dd yyyy HH:mm")</span>
                                                                        </div>
                                                                        <div>
                                                                            @((MarkupString)x.Content)
                                                                        </div>
                                                                    </div>
                                                                </li>
                                                            }
                                                        </div>
                                                        <div class="continue">
                                                            <a class="comment-reply" target="_self" href="javascript:;">Reply</a>
                                                        </div>
                                                    </ol>
                                                </div>
                                            </div>
                                        }
                                    </li>
                                    }
                                </ol>
                            }
                            <div id="top-continue" class="continue">
                                <a class="comment-reply" target="_self" href="javascript:;">Add comment</a>
                            </div>
                        </div>
                    </div>
                </div>
                <p class="comment-footer"> </p>
                <div class="comment-form">
                    <a name="comment-form"></a>
                    <p> </p>
                    <a href="https://www.blogger.com/comment-iframe.g?blogID=6638523622898744294&amp;postID=7132000124497114716&amp;blogspotRpcToken=9065075" id="comment-editor-src"></a>
                </div>
            </div>
        </div>
    </div>
</div>


@functions
{
    int count = 0;
    PostViewModel post;
    IEnumerable<CommentViewModel> comments;

    [Parameter] string id { get; set; }

    protected override async Task OnInitAsync()
    {
        post = await API.GetPostAsync(id);
        comments = await RenderCommentsMarkdownAsync(await API.GetCommentsAsync(post.Id));
        count = CountComment(comments);
    }

    private async Task<string> SanitizeAsync(string src)
    {
        return await JsRuntime.InvokeAsync<string>("filterXSS", src);
    }

    private async Task<IEnumerable<CommentViewModel>> RenderCommentsMarkdownAsync(IEnumerable<CommentViewModel> comments)
    {
        foreach (var x in comments)
        {
            if (x.IsOwner)
            {
                x.Content = Instance.Parse(x.Content);
            }
            else
            {
                x.Content = await SanitizeAsync(Instance.Parse(x.Content));
            }

            if (x.InnerComments != null)
            {
                await RenderCommentsMarkdownAsync(x.InnerComments);
            }
        }

        return comments;
    }

    private int CountComment(IEnumerable<CommentViewModel> src, bool isSecondLevel = false)
    {
        if (src == null)
        {
            return 0;
        }
        if (isSecondLevel)
        {
            return src.Count();
        }
        else
        {
            return src.Count() + src.Select(x => CountComment(x.InnerComments, true)).Sum();
        }
    }
}